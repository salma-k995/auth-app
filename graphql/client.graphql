type Client {
    id: ID!
    first_name: String!
    last_name: String!
    email: String!
    phone: String!
    password: String!
    user: User! @belongsTo
}

extend type Query {
    clients(orderBy: _ @orderBy(columns: ["created_at"])): [Client]!
        @guard(with: "sanctum")
        @paginate(model: "Client")

    showClient(id: ID!): Client
        @guard(with: "sanctum")
        @field(resolver: "ClientQueries@showClient")
}

extend type Mutation {
    
    createClient(
        first_name: String!
        last_name: String!
        email: String!
        phone: String!
    ): Client
        @guard(with: "sanctum")
        @validator(class: "RegisterClientValidator")
        @field(resolver: "ClientMutator@createClient")

    updateClient(
        id: ID!
        first_name: String
        last_name: String
        email: String
        phone: String
    ): String
        @guard(with: "sanctum")
        @validator(class: "UpdateClientValidator")
        @field(resolver: "ClientMutator@updateClient")

    deleteClients(object: [ID]!): String
        @guard(with: "sanctum")
        @field(resolver: "ClientMutator@deleteClients")

    exportClients(ids: [ID]): String
        @field(resolver: "ClientMutator@exportClients")

    searchClients(terme: String): [Client]
        @paginate(
            builder: "App\\GraphQL\\Mutations\\ClientMutator@searchClients"
        )
}
